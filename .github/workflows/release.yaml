name: Release ${{ github.event.inputs.version }}

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version to release (eg: 'v1.0.0')"
        required: true
        type: string
      draft:
        description: "Create a draft release?"
        required: false
        type: boolean
        default: true
      prerelease:
        description: "Create a prerelease?"
        required: false
        type: boolean
        default: true

env:
  ProjectFile: "src/AvaloniaExample/AvaloniaExample.csproj"

jobs:
  transformInputs:
    runs-on: ubuntu-latest
    outputs:
      TagVersion: ${{ steps.setOutputs.outputs.tagVersion }}
      RawVersion: ${{ steps.setOutputs.outputs.rawVersion }}

    steps:
      - name: Set Outputs
        id: setOutputs
        shell: pwsh
        env:
          InputVersion: ${{ github.event.inputs.version }}
        run: |
          $tagVersion = $env:InputVersion.StartsWith('v') ? $env:InputVersion : "v" + $env:InputVersion
          $rawVersion = $env:InputVersion.StartsWith('v') ? $env.InputVersion.Substring(1) : $env:InputVersion
          $validation = [System.Version]::Parse($env.rawVersion)
          echo "tagVersion=$tagVersion" >> $env:GITHUB_OUTPUT
          echo "rawVersion=$rawVersion" >> $env:GITHUB_OUTPUT

  build-linux:
    needs: [ transformInputs ]
    uses: ./.github/workflows/build-linux-pupnet.yaml
    with:
      AppVersion: ${{ needs.transformInputs.outputs.RawVersion }}
      ProjectFile: ${{ env.ProjectFile }}
      RetentionDays: 1

  release:
    runs-on: ubuntu-latest
    needs: [ transformInputs, build-linux ]

    steps:
      - name: Get Linux Archive
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build-linux.outputs.ArtifactNameLinuxArchive }}
          path: bin/LinuxArchive

      - name: Get Linux AppImage
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build-linux.outputs.ArtifactNameLinuxAppImage }}
          path: bin/LinuxAppImage

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ needs.transformInputs.outputs.RawVersion }}
          tag_name: ${{ needs.transformInputs.outputs.TagVersion }}
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}
          files: bin/**/*
