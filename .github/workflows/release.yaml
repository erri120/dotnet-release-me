name: Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  ProjectFile: "src/Example.App/Example.App.csproj"
  ProjectDir: "src/Example.App"

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Print debug info
        run: dotnet --info

      - name: Build (Linux)
        if: runner.os == 'Linux'
        run: dotnet publish ${{ env.ProjectFile }} -c Release -r linux-x64 --output bin/linux-x64 --self-contained -p:TieredCompilation=true -p:PublishReadyToRun=true -p:PublishSingleFile=true

# TODO: update version in Package.appxmanfiest
# https://learn.microsoft.com/en-us/windows/msix/desktop/azure-dev-ops

      - name: Decode the PFX
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $certBytes = [System.Convert]::FromBase64String("${{ secrets.PFX_BASE64 }}")
          $certPath = Join-Path -Path $env:ProjectDir -ChildPath GitHubActionsWorkflow.pfx
          [IO.File]::WriteAllBytes("$certPath", $certBytes)

      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: |
          dotnet restore
          dotnet msbuild -p:Configuration=Release -p:AppxBundlePlatform=x64 -p:AppxPackageDir=${{ github.workspace }}\bin -p:AppxBundle=Always -p:UapAppxPackageBuildMode=StoreUpload -p:AppxPackageSigningEnabled=true -p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx -p:PackageCertificatePassword=${{ secrets.PFX_KEY }}
#        run: dotnet build ${{ env.ProjectFile }} -c Release --self-contained -p:UapAppxPackageBuildMode=StoreUpload -p:AppxBundle=Always -p:AppxPackageDir=${{ github.workspace}}/bin/win-x64 -p:AppxPackageSigningEnabled=true -p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx -p:PackageCertificatePassword=${{ secrets.PFX_KEY }} -p:TieredCompilation=true -p:PublishReadyToRun=true -p:PublishSingleFile=true

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Example.App-${{ runner.os }}-${{ github.sha }}
          path: ${{ github.workspace }}/bin
          if-no-files-found: error
          retention-days: 1
